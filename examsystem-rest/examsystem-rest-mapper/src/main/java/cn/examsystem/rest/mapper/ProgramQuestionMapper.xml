<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.examsystem.rest.mapper.ProgramQuestionMapper" >
  <resultMap id="BaseResultMap" type="cn.examsystem.rest.pojo.po.ProgramQuestion" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="tittle" property="tittle" jdbcType="VARCHAR" />
    <result column="time_limit" property="timeLimit" jdbcType="INTEGER" />
    <result column="memory_limit" property="memoryLimit" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.examsystem.rest.pojo.po.ProgramQuestionWithBLOBs" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
    <result column="input_description" property="inputDescription" jdbcType="LONGVARCHAR" />
    <result column="output_description" property="outputDescription" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, tittle, time_limit, memory_limit, type, created_time, updated_time
  </sql>
  <sql id="Blob_Column_List" >
    description, input_description, output_description
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.examsystem.rest.pojo.po.ProgramQuestionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from program_question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.examsystem.rest.pojo.po.ProgramQuestionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from program_question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from program_question
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from program_question
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.examsystem.rest.pojo.po.ProgramQuestionExample" >
    delete from program_question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.examsystem.rest.pojo.po.ProgramQuestionWithBLOBs" >
    insert into program_question (id, tittle, time_limit, 
      memory_limit, type, created_time, 
      updated_time, description, input_description, 
      output_description)
    values (#{id,jdbcType=VARCHAR}, #{tittle,jdbcType=VARCHAR}, #{timeLimit,jdbcType=INTEGER}, 
      #{memoryLimit,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{description,jdbcType=LONGVARCHAR}, #{inputDescription,jdbcType=LONGVARCHAR}, 
      #{outputDescription,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.examsystem.rest.pojo.po.ProgramQuestionWithBLOBs" >
    insert into program_question
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tittle != null" >
        tittle,
      </if>
      <if test="timeLimit != null" >
        time_limit,
      </if>
      <if test="memoryLimit != null" >
        memory_limit,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="inputDescription != null" >
        input_description,
      </if>
      <if test="outputDescription != null" >
        output_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="tittle != null" >
        #{tittle,jdbcType=VARCHAR},
      </if>
      <if test="timeLimit != null" >
        #{timeLimit,jdbcType=INTEGER},
      </if>
      <if test="memoryLimit != null" >
        #{memoryLimit,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="inputDescription != null" >
        #{inputDescription,jdbcType=LONGVARCHAR},
      </if>
      <if test="outputDescription != null" >
        #{outputDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.examsystem.rest.pojo.po.ProgramQuestionExample" resultType="java.lang.Integer" >
    select count(*) from program_question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update program_question
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.tittle != null" >
        tittle = #{record.tittle,jdbcType=VARCHAR},
      </if>
      <if test="record.timeLimit != null" >
        time_limit = #{record.timeLimit,jdbcType=INTEGER},
      </if>
      <if test="record.memoryLimit != null" >
        memory_limit = #{record.memoryLimit,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.inputDescription != null" >
        input_description = #{record.inputDescription,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.outputDescription != null" >
        output_description = #{record.outputDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update program_question
    set id = #{record.id,jdbcType=VARCHAR},
      tittle = #{record.tittle,jdbcType=VARCHAR},
      time_limit = #{record.timeLimit,jdbcType=INTEGER},
      memory_limit = #{record.memoryLimit,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=LONGVARCHAR},
      input_description = #{record.inputDescription,jdbcType=LONGVARCHAR},
      output_description = #{record.outputDescription,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update program_question
    set id = #{record.id,jdbcType=VARCHAR},
      tittle = #{record.tittle,jdbcType=VARCHAR},
      time_limit = #{record.timeLimit,jdbcType=INTEGER},
      memory_limit = #{record.memoryLimit,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.examsystem.rest.pojo.po.ProgramQuestionWithBLOBs" >
    update program_question
    <set >
      <if test="tittle != null" >
        tittle = #{tittle,jdbcType=VARCHAR},
      </if>
      <if test="timeLimit != null" >
        time_limit = #{timeLimit,jdbcType=INTEGER},
      </if>
      <if test="memoryLimit != null" >
        memory_limit = #{memoryLimit,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="inputDescription != null" >
        input_description = #{inputDescription,jdbcType=LONGVARCHAR},
      </if>
      <if test="outputDescription != null" >
        output_description = #{outputDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.examsystem.rest.pojo.po.ProgramQuestionWithBLOBs" >
    update program_question
    set tittle = #{tittle,jdbcType=VARCHAR},
      time_limit = #{timeLimit,jdbcType=INTEGER},
      memory_limit = #{memoryLimit,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=LONGVARCHAR},
      input_description = #{inputDescription,jdbcType=LONGVARCHAR},
      output_description = #{outputDescription,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.examsystem.rest.pojo.po.ProgramQuestion" >
    update program_question
    set tittle = #{tittle,jdbcType=VARCHAR},
      time_limit = #{timeLimit,jdbcType=INTEGER},
      memory_limit = #{memoryLimit,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>