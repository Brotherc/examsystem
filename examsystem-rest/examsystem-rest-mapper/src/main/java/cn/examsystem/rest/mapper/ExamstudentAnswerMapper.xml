<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.examsystem.rest.mapper.ExamstudentAnswerMapper" >
  <resultMap id="BaseResultMap" type="cn.examsystem.rest.pojo.po.ExamstudentAnswer" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="exam_student_id" property="examStudentId" jdbcType="VARCHAR" />
    <result column="testpaper_question_id" property="testpaperQuestionId" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="DECIMAL" />
    <result column="is_graded" property="isGraded" jdbcType="BIT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.examsystem.rest.pojo.po.ExamstudentAnswer" extends="BaseResultMap" >
    <result column="student_answer" property="studentAnswer" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, exam_student_id, testpaper_question_id, score, is_graded, created_time, updated_time
  </sql>
  <sql id="Blob_Column_List" >
    student_answer
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.examsystem.rest.pojo.po.ExamstudentAnswerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from examstudent_answer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.examsystem.rest.pojo.po.ExamstudentAnswerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from examstudent_answer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from examstudent_answer
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from examstudent_answer
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.examsystem.rest.pojo.po.ExamstudentAnswerExample" >
    delete from examstudent_answer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.examsystem.rest.pojo.po.ExamstudentAnswer" >
    insert into examstudent_answer (id, exam_student_id, testpaper_question_id, 
      score, is_graded, created_time, 
      updated_time, student_answer)
    values (#{id,jdbcType=VARCHAR}, #{examStudentId,jdbcType=VARCHAR}, #{testpaperQuestionId,jdbcType=VARCHAR}, 
      #{score,jdbcType=DECIMAL}, #{isGraded,jdbcType=BIT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{studentAnswer,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.examsystem.rest.pojo.po.ExamstudentAnswer" >
    insert into examstudent_answer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="examStudentId != null" >
        exam_student_id,
      </if>
      <if test="testpaperQuestionId != null" >
        testpaper_question_id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="isGraded != null" >
        is_graded,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
      <if test="studentAnswer != null" >
        student_answer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="examStudentId != null" >
        #{examStudentId,jdbcType=VARCHAR},
      </if>
      <if test="testpaperQuestionId != null" >
        #{testpaperQuestionId,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="isGraded != null" >
        #{isGraded,jdbcType=BIT},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="studentAnswer != null" >
        #{studentAnswer,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.examsystem.rest.pojo.po.ExamstudentAnswerExample" resultType="java.lang.Integer" >
    select count(*) from examstudent_answer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update examstudent_answer
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.examStudentId != null" >
        exam_student_id = #{record.examStudentId,jdbcType=VARCHAR},
      </if>
      <if test="record.testpaperQuestionId != null" >
        testpaper_question_id = #{record.testpaperQuestionId,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=DECIMAL},
      </if>
      <if test="record.isGraded != null" >
        is_graded = #{record.isGraded,jdbcType=BIT},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.studentAnswer != null" >
        student_answer = #{record.studentAnswer,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update examstudent_answer
    set id = #{record.id,jdbcType=VARCHAR},
      exam_student_id = #{record.examStudentId,jdbcType=VARCHAR},
      testpaper_question_id = #{record.testpaperQuestionId,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=DECIMAL},
      is_graded = #{record.isGraded,jdbcType=BIT},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      student_answer = #{record.studentAnswer,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update examstudent_answer
    set id = #{record.id,jdbcType=VARCHAR},
      exam_student_id = #{record.examStudentId,jdbcType=VARCHAR},
      testpaper_question_id = #{record.testpaperQuestionId,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=DECIMAL},
      is_graded = #{record.isGraded,jdbcType=BIT},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.examsystem.rest.pojo.po.ExamstudentAnswer" >
    update examstudent_answer
    <set >
      <if test="examStudentId != null" >
        exam_student_id = #{examStudentId,jdbcType=VARCHAR},
      </if>
      <if test="testpaperQuestionId != null" >
        testpaper_question_id = #{testpaperQuestionId,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="isGraded != null" >
        is_graded = #{isGraded,jdbcType=BIT},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="studentAnswer != null" >
        student_answer = #{studentAnswer,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.examsystem.rest.pojo.po.ExamstudentAnswer" >
    update examstudent_answer
    set exam_student_id = #{examStudentId,jdbcType=VARCHAR},
      testpaper_question_id = #{testpaperQuestionId,jdbcType=VARCHAR},
      score = #{score,jdbcType=DECIMAL},
      is_graded = #{isGraded,jdbcType=BIT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      student_answer = #{studentAnswer,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.examsystem.rest.pojo.po.ExamstudentAnswer" >
    update examstudent_answer
    set exam_student_id = #{examStudentId,jdbcType=VARCHAR},
      testpaper_question_id = #{testpaperQuestionId,jdbcType=VARCHAR},
      score = #{score,jdbcType=DECIMAL},
      is_graded = #{isGraded,jdbcType=BIT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>