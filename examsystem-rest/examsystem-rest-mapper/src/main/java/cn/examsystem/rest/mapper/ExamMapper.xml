<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.examsystem.rest.mapper.ExamMapper" >
  <resultMap id="BaseResultMap" type="cn.examsystem.rest.pojo.po.Exam" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="test_paper_id" property="testPaperId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="school_year_id" property="schoolYearId" jdbcType="VARCHAR" />
    <result column="term" property="term" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="created_teacher_id" property="createdTeacherId" jdbcType="VARCHAR" />
    <result column="part_num" property="partNum" jdbcType="INTEGER" />
    <result column="interval_time" property="intervalTime" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="time" property="time" jdbcType="INTEGER" />
    <result column="exam_pwd" property="examPwd" jdbcType="VARCHAR" />
    <result column="invigilate_pwd" property="invigilatePwd" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, course_id, test_paper_id, type, school_year_id, term, status, created_teacher_id, 
    part_num, interval_time, start_time, end_time, time, exam_pwd, invigilate_pwd, created_time, 
    updated_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.examsystem.rest.pojo.po.ExamExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from exam
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from exam
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.examsystem.rest.pojo.po.ExamExample" >
    delete from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.examsystem.rest.pojo.po.Exam" >
    insert into exam (id, course_id, test_paper_id, 
      type, school_year_id, term, 
      status, created_teacher_id, part_num, 
      interval_time, start_time, end_time, 
      time, exam_pwd, invigilate_pwd, 
      created_time, updated_time)
    values (#{id,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, #{testPaperId,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{schoolYearId,jdbcType=VARCHAR}, #{term,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createdTeacherId,jdbcType=VARCHAR}, #{partNum,jdbcType=INTEGER}, 
      #{intervalTime,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{time,jdbcType=INTEGER}, #{examPwd,jdbcType=VARCHAR}, #{invigilatePwd,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.examsystem.rest.pojo.po.Exam" >
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="testPaperId != null" >
        test_paper_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="schoolYearId != null" >
        school_year_id,
      </if>
      <if test="term != null" >
        term,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createdTeacherId != null" >
        created_teacher_id,
      </if>
      <if test="partNum != null" >
        part_num,
      </if>
      <if test="intervalTime != null" >
        interval_time,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="examPwd != null" >
        exam_pwd,
      </if>
      <if test="invigilatePwd != null" >
        invigilate_pwd,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="testPaperId != null" >
        #{testPaperId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="schoolYearId != null" >
        #{schoolYearId,jdbcType=VARCHAR},
      </if>
      <if test="term != null" >
        #{term,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdTeacherId != null" >
        #{createdTeacherId,jdbcType=VARCHAR},
      </if>
      <if test="partNum != null" >
        #{partNum,jdbcType=INTEGER},
      </if>
      <if test="intervalTime != null" >
        #{intervalTime,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null" >
        #{time,jdbcType=INTEGER},
      </if>
      <if test="examPwd != null" >
        #{examPwd,jdbcType=VARCHAR},
      </if>
      <if test="invigilatePwd != null" >
        #{invigilatePwd,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.examsystem.rest.pojo.po.ExamExample" resultType="java.lang.Integer" >
    select count(*) from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exam
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.testPaperId != null" >
        test_paper_id = #{record.testPaperId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.schoolYearId != null" >
        school_year_id = #{record.schoolYearId,jdbcType=VARCHAR},
      </if>
      <if test="record.term != null" >
        term = #{record.term,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createdTeacherId != null" >
        created_teacher_id = #{record.createdTeacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.partNum != null" >
        part_num = #{record.partNum,jdbcType=INTEGER},
      </if>
      <if test="record.intervalTime != null" >
        interval_time = #{record.intervalTime,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=INTEGER},
      </if>
      <if test="record.examPwd != null" >
        exam_pwd = #{record.examPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.invigilatePwd != null" >
        invigilate_pwd = #{record.invigilatePwd,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exam
    set id = #{record.id,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=VARCHAR},
      test_paper_id = #{record.testPaperId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      school_year_id = #{record.schoolYearId,jdbcType=VARCHAR},
      term = #{record.term,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      created_teacher_id = #{record.createdTeacherId,jdbcType=VARCHAR},
      part_num = #{record.partNum,jdbcType=INTEGER},
      interval_time = #{record.intervalTime,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      time = #{record.time,jdbcType=INTEGER},
      exam_pwd = #{record.examPwd,jdbcType=VARCHAR},
      invigilate_pwd = #{record.invigilatePwd,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.examsystem.rest.pojo.po.Exam" >
    update exam
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="testPaperId != null" >
        test_paper_id = #{testPaperId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="schoolYearId != null" >
        school_year_id = #{schoolYearId,jdbcType=VARCHAR},
      </if>
      <if test="term != null" >
        term = #{term,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdTeacherId != null" >
        created_teacher_id = #{createdTeacherId,jdbcType=VARCHAR},
      </if>
      <if test="partNum != null" >
        part_num = #{partNum,jdbcType=INTEGER},
      </if>
      <if test="intervalTime != null" >
        interval_time = #{intervalTime,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="examPwd != null" >
        exam_pwd = #{examPwd,jdbcType=VARCHAR},
      </if>
      <if test="invigilatePwd != null" >
        invigilate_pwd = #{invigilatePwd,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.examsystem.rest.pojo.po.Exam" >
    update exam
    set course_id = #{courseId,jdbcType=VARCHAR},
      test_paper_id = #{testPaperId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      school_year_id = #{schoolYearId,jdbcType=VARCHAR},
      term = #{term,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      created_teacher_id = #{createdTeacherId,jdbcType=VARCHAR},
      part_num = #{partNum,jdbcType=INTEGER},
      interval_time = #{intervalTime,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      time = #{time,jdbcType=INTEGER},
      exam_pwd = #{examPwd,jdbcType=VARCHAR},
      invigilate_pwd = #{invigilatePwd,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>