<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.examsystem.rest.mapper.TestpaperQuestionRelationMapper" >
  <resultMap id="BaseResultMap" type="cn.examsystem.rest.pojo.po.TestpaperQuestionRelation" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="test_paper_id" property="testPaperId" jdbcType="VARCHAR" />
    <result column="question_id" property="questionId" jdbcType="VARCHAR" />
    <result column="question_type" property="questionType" jdbcType="INTEGER" />
    <result column="question_score" property="questionScore" jdbcType="DECIMAL" />
    <result column="question_order" property="questionOrder" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, test_paper_id, question_id, question_type, question_score, question_order, created_time, 
    updated_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.examsystem.rest.pojo.po.TestpaperQuestionRelationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from testpaper_question_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from testpaper_question_relation
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from testpaper_question_relation
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.examsystem.rest.pojo.po.TestpaperQuestionRelationExample" >
    delete from testpaper_question_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.examsystem.rest.pojo.po.TestpaperQuestionRelation" >
    insert into testpaper_question_relation (id, test_paper_id, question_id, 
      question_type, question_score, question_order, 
      created_time, updated_time)
    values (#{id,jdbcType=VARCHAR}, #{testPaperId,jdbcType=VARCHAR}, #{questionId,jdbcType=VARCHAR}, 
      #{questionType,jdbcType=INTEGER}, #{questionScore,jdbcType=DECIMAL}, #{questionOrder,jdbcType=INTEGER}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.examsystem.rest.pojo.po.TestpaperQuestionRelation" >
    insert into testpaper_question_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="testPaperId != null" >
        test_paper_id,
      </if>
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="questionType != null" >
        question_type,
      </if>
      <if test="questionScore != null" >
        question_score,
      </if>
      <if test="questionOrder != null" >
        question_order,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="testPaperId != null" >
        #{testPaperId,jdbcType=VARCHAR},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=VARCHAR},
      </if>
      <if test="questionType != null" >
        #{questionType,jdbcType=INTEGER},
      </if>
      <if test="questionScore != null" >
        #{questionScore,jdbcType=DECIMAL},
      </if>
      <if test="questionOrder != null" >
        #{questionOrder,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.examsystem.rest.pojo.po.TestpaperQuestionRelationExample" resultType="java.lang.Integer" >
    select count(*) from testpaper_question_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update testpaper_question_relation
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.testPaperId != null" >
        test_paper_id = #{record.testPaperId,jdbcType=VARCHAR},
      </if>
      <if test="record.questionId != null" >
        question_id = #{record.questionId,jdbcType=VARCHAR},
      </if>
      <if test="record.questionType != null" >
        question_type = #{record.questionType,jdbcType=INTEGER},
      </if>
      <if test="record.questionScore != null" >
        question_score = #{record.questionScore,jdbcType=DECIMAL},
      </if>
      <if test="record.questionOrder != null" >
        question_order = #{record.questionOrder,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update testpaper_question_relation
    set id = #{record.id,jdbcType=VARCHAR},
      test_paper_id = #{record.testPaperId,jdbcType=VARCHAR},
      question_id = #{record.questionId,jdbcType=VARCHAR},
      question_type = #{record.questionType,jdbcType=INTEGER},
      question_score = #{record.questionScore,jdbcType=DECIMAL},
      question_order = #{record.questionOrder,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.examsystem.rest.pojo.po.TestpaperQuestionRelation" >
    update testpaper_question_relation
    <set >
      <if test="testPaperId != null" >
        test_paper_id = #{testPaperId,jdbcType=VARCHAR},
      </if>
      <if test="questionId != null" >
        question_id = #{questionId,jdbcType=VARCHAR},
      </if>
      <if test="questionType != null" >
        question_type = #{questionType,jdbcType=INTEGER},
      </if>
      <if test="questionScore != null" >
        question_score = #{questionScore,jdbcType=DECIMAL},
      </if>
      <if test="questionOrder != null" >
        question_order = #{questionOrder,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.examsystem.rest.pojo.po.TestpaperQuestionRelation" >
    update testpaper_question_relation
    set test_paper_id = #{testPaperId,jdbcType=VARCHAR},
      question_id = #{questionId,jdbcType=VARCHAR},
      question_type = #{questionType,jdbcType=INTEGER},
      question_score = #{questionScore,jdbcType=DECIMAL},
      question_order = #{questionOrder,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>